1.输入两个单调递增的链表，输出两个链表合成后的链表，当然我们需要合成后的链表满足单调不减规则。
/*
public class ListNode {
    int val;
    ListNode next = null;

    ListNode(int val) {
        this.val = val;
    }
}*/
public class Solution {
    public ListNode Merge(ListNode list1,ListNode list2) {
        ListNode L,q;
        if(list1==null)return list2;
        else if(list2==null)return list1;
        if(list1.val<=list2.val){
            q=new ListNode(list1.val); 
            list1=list1.next;
        }
        else {
              q=new ListNode(list2.val);
                list2=list2.next;
        }
        L=q;
        while(list1!=null&&list2!=null){
            if(list1.val<=list2.val){
                q.next=new ListNode(list1.val);
                q=q.next;
                list1=list1.next;
            }
            else {
                q.next=new ListNode(list2.val);
                q=q.next;
                list2=list2.next;
            }
        }
        if(list1!=null){
            while(list1!=null){
                q.next=new ListNode(list1.val);
                q=q.next;
                list1=list1.next;
            }
        }
        else {
        while(list2!=null){
                q.next=new ListNode(list2.val);
                q=q.next;
                list2=list2.next;
            }
        }
        return L;
    }
    
}